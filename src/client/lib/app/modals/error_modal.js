// Generated by CoffeeScript 1.7.1
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function() {
  return this.error_modal = (function(_super) {
    __extends(error_modal, _super);

    function error_modal() {
      this.ok = __bind(this.ok, this);
      this.handle_err_msg = __bind(this.handle_err_msg, this);
      this.render = __bind(this.render, this);
      return error_modal.__super__.constructor.apply(this, arguments);
    }

    error_modal.prototype.el = "#error-modal";

    error_modal.prototype.events = {
      "click #btn-ok": "ok"
    };

    error_modal.prototype.initialize = function(opts) {
      this.$okBtn = this.$el.find("#btn-ok");
      return $(document).on("keyup checkout", (function(_this) {
        return function(e) {
          if (e.keyCode === 13) {
            e.preventDefault();
            _this.ok();
          }
          if (e.keyCode === 27) {
            e.preventDefault();
            return _this.cancel();
          }
        };
      })(this));
    };

    error_modal.prototype.render = function(e) {
      this.$el.modal();
      this.handle_err_msg(e);
      return this;
    };

    error_modal.prototype.handle_err_msg = function(e) {
      var err_msg;
      err_msg = "Something has gone wrong, the server could not make a " + " connection to the Literary Worlds MUD.\nPlease try again later.";
      if (e === "timeout") {
        err_msg = "The Literary Worlds MUD connection timed out.\n" + "Please reconnect to continue.\n You can do this by " + "pressing Login and entering your account details, or by " + "pressing Connect and logging in manually.";
      }
      console.log(App.Views);
      App.Views.text_handler.clear_backlog();
      App.Views.text_handler.insert(err_msg);
      return $(".error-msg")[0].innerText = err_msg;
    };

    error_modal.prototype.ok = function() {
      return this.cleanup();
    };

    error_modal.prototype.cleanup = function() {
      $(document).off("keyup checkout");
      this.$el.off("click", "#btn-ok");
      return this.$el.modal("hide");
    };

    return error_modal;

  })(Backbone.View);
});
