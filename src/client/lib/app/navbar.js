// Generated by CoffeeScript 1.7.1
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(["modals/login_modal", "modals/settings_modal", "modals/license_modal"], function(login_modal, settings_modal, license_modal) {
  var navbar;
  return navbar = (function(_super) {
    __extends(navbar, _super);

    function navbar() {
      this.conn_guest = __bind(this.conn_guest, this);
      return navbar.__super__.constructor.apply(this, arguments);
    }

    navbar.prototype.el = "#navbar";

    navbar.prototype.events = {
      "click #login-btn": "show_login_modal",
      "click .settings": "show_settings_modal",
      "click .text-select": "text_mode",
      "click .graphic-select": "graphic_mode",
      "click .mixed-select": "mixed_mode",
      "click #connect-guest": "conn_guest",
      "click #disconnect-btn": "disconnect",
      "click .license": "show_license_modal"
    };

    navbar.prototype.show_login_modal = function() {
      return new login_modal().render();
    };

    navbar.prototype.show_settings_modal = function() {
      return new settings_modal().render();
    };

    navbar.prototype.show_license_modal = function() {
      return new license_modal().render();
    };

    navbar.prototype.text_mode = function() {
      this.set_check_mark("text");
      return App.Views.mainView.text_mode();
    };

    navbar.prototype.graphic_mode = function() {
      this.set_check_mark("graphic");
      return App.Views.mainView.graphic_mode();
    };

    navbar.prototype.mixed_mode = function() {
      this.set_check_mark("mixed");
      return App.Views.mainView.mixed_mode();
    };

    navbar.prototype.conn_guest = function() {
      var $connect_btn, connect;
      $connect_btn = this.$el.find("#connect-guest");
      connect = $.trim($connect_btn.html());
      if (connect === "Connect as guest") {
        $connect_btn.attr("id", "disconnect-btn");
        $connect_btn.html("Disconnect");
      }
      App.Views.text_handler.insert("\n\n\n");
      return App.Views.mainView.auth("guest", "");
    };

    navbar.prototype.disconnect = function() {
      var $disconnect_btn, disconnect;
      $disconnect_btn = this.$el.find("#disconnect-btn");
      disconnect = $.trim($disconnect_btn.html());
      if (disconnect === "Disconnect") {
        App.Views.mainView.close();
        $disconnect_btn.attr("id", "connect-guest");
        $disconnect_btn.html("Connect as guest");
        App.Views.text_handler.clear_backlog();
        App.Views.text_handler.insert("\t\tYou have disconnected from the MUD.\n");
      }
      return App.Views.html_handler.remove_markup();
    };

    navbar.prototype.set_check_mark = function(mode) {
      console.log("hello to " + mode);
      $(".mode-select").removeClass("dropdown-selected");
      return $("." + mode + "-select").addClass("dropdown-selected");
    };

    return navbar;

  })(Backbone.View);
});
