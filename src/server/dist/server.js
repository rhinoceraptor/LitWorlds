// Generated by CoffeeScript 1.7.1
var http, io, net, socketPort, telnetHost, telnetPort, telnet_connected;

net = require('net');

http = require('http');

io = require('socket.io');

telnetPort = 7777;

telnetHost = '104.131.36.137';

socketPort = 8080;

console.log('Starting socket server on port ' + socketPort);

io = io.listen(socketPort);

telnet_connected = false;

io.sockets.on('connection', function(ioSocket) {
  var telnet;
  process.stdout.write('Incoming socket.io connection\n');
  ioSocket.emit('telnetLine', 'Hello from socket.io');
  ioSocket.on('auth', function(authData) {
    var passwd, user;
    user = authData.user;
    passwd = authData.passwd;
    if (typeof telnet !== "undefined" && telnet !== null) {
      telnet.write('CO ' + user + '\n' + passwd);
      return ioSocket.emit('authenticated');
    }
  });
  telnet = net.createConnection(telnetPort, telnetHost);
  telnet.on('data', function(telnetData) {
    process.stdout.write('Recieved from server: ' + telnetData + '\n');
    process.stdout.write('emitting to client\n');
    return ioSocket.emit('telnetLine', telnetData);
  }).on('end', function() {
    return ioSocket.emit('disconnected');
  });
  ioSocket.on('client_line', function(socketData) {
    process.stdout.write('Recieved from client:\n>>>' + socketData + '\n');
    return telnet.write(socketData + "\n");
  });
  return ioSocket.on('disconnect', function() {
    process.stdout.write('disconnect the telnet connection!\n');
    return telnet.end();
  });
});
